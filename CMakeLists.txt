# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(galois_ring
	VERSION
		0.1.0
	DESCRIPTION
		"math library"
)

# Target: grlib
set(grlib_SOURCES
	"lib/gring.h"
	"lib/grlifttables.h"
	"lib/grmodtables.h"
)

add_library(grlib INTERFACE)

target_sources(grlib INTERFACE ${grlib_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${grlib_SOURCES})

target_compile_features(grlib INTERFACE
	cxx_std_20
)

target_include_directories(grlib INTERFACE
	lib
)

# Target: grtowertest
set(grtowertest_SOURCES
	cmake.toml
	"test/UnitTests/GaloisRingTowering/testGRTowering.cc"
	"test/UnitTests/GaloisRingTowering/testGRTowering.h"
	"test/UnitTests/UnitTest.cc"
	"test/UnitTests/UnitTest.h"
)

add_executable(grtowertest)

target_sources(grtowertest PRIVATE ${grtowertest_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${grtowertest_SOURCES})

target_compile_features(grtowertest PRIVATE
	cxx_std_20
)

target_link_libraries(grtowertest PRIVATE
	grlib
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT grtowertest)
endif()

# Target: grbenchmark
set(grbenchmark_SOURCES
	cmake.toml
	"src/benchmark_GR.cc"
)

add_executable(grbenchmark)

target_sources(grbenchmark PRIVATE ${grbenchmark_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${grbenchmark_SOURCES})

target_compile_features(grbenchmark PRIVATE
	cxx_std_20
)

target_link_libraries(grbenchmark PRIVATE
	grlib
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT grbenchmark)
endif()
