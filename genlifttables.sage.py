

# This file was *autogenerated* from the file genlifttables.sage
from sage.all_cmdline import *   # import sage library

_sage_const_4 = Integer(4); _sage_const_2 = Integer(2); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1)
GENERATE_EMBEDDINGS = [_sage_const_4 ]
# No base = 1
BASE_SIZE = [_sage_const_2 ]
EXT_SIZE = _sage_const_4 

embeddings = {}
for base_k in BASE_SIZE:
    print("Z2K",base_k)
    Z2 = IntegerModRing(_sage_const_2 **base_k)
    Z2K = PolynomialRing(Z2, 'x')
    for d0 in GENERATE_EMBEDDINGS:
        print("d0",_sage_const_2 **d0)
        # find the primitive polynomial in GF
        F1 = GF(_sage_const_2 **d0, 'α', modulus="minimal_weight")
        extension_factor = _sage_const_4 
        while extension_factor * d0 <= EXT_SIZE:
            ext_d0 = extension_factor * d0
            print("ext",ext_d0)
            F2 = GF(_sage_const_2 **ext_d0, 'β', modulus="minimal_weight")
            
            ext_Z2K = QuotientRing(Z2K, F1.modulus())
            lift_Z2K = QuotientRing(Z2K, F2.modulus())

            root = lift_Z2K['x'](F1.modulus()).roots(multiplicities=False)[_sage_const_0 ]
            embeddings[(base_k,(d0, ext_d0))] = [(root**i) for i in range(d0)]
            extension_factor += _sage_const_1 

print(embeddings)


