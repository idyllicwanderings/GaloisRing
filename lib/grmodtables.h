
// This file was automatically generated, changes may be overwritten
#pragma once
#include <cstdint>
// Only to keep everything looking nice if you somehow would include the file directly; it's circular otherwise
#include "gring.h"

namespace grmodtables {
    template <int k, typename R, int d0> extern const std::array<R, d0 + 1> reduction_polynomial;
    template <int k> inline const std::array<Z2k<k>, 3> reduction_polynomial<k, Z2k<k>, 2> = {Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(1u)};
    template <int k> inline const std::array<GR1e<k, 2>, 3> reduction_polynomial<k, GR1e<k, 2>, 2> = {GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 2>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 2>, 2> = {GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GRT1e< GR1e<k, 2>, 2>, 2>, 3> reduction_polynomial<k, GRT1e< GRT1e< GR1e<k, 2>, 2>, 2>, 2> = {GRT1e< GRT1e< GR1e<k, 2>, 2>, 2>({GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u})})}), GRT1e< GRT1e< GR1e<k, 2>, 2>, 2>({GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 1u})})}), GRT1e< GRT1e< GR1e<k, 2>, 2>, 2>({GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})})};
    template <int k> inline const std::array<GRT1e< GRT1e< GR1e<k, 2>, 2>, 2>, 4> reduction_polynomial<k, GRT1e< GRT1e< GR1e<k, 2>, 2>, 2>, 3> = {GRT1e< GRT1e< GR1e<k, 2>, 2>, 2>({GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 0u})})}), GRT1e< GRT1e< GR1e<k, 2>, 2>, 2>({GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 0u})})}), GRT1e< GRT1e< GR1e<k, 2>, 2>, 2>({GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})}), GRT1e< GRT1e< GR1e<k, 2>, 2>, 2>({GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})})};
    template <int k> inline const std::array<GRT1e< GRT1e< GR1e<k, 2>, 2>, 2>, 5> reduction_polynomial<k, GRT1e< GRT1e< GR1e<k, 2>, 2>, 2>, 4> = {GRT1e< GRT1e< GR1e<k, 2>, 2>, 2>({GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})})}), GRT1e< GRT1e< GR1e<k, 2>, 2>, 2>({GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 1u})})}), GRT1e< GRT1e< GR1e<k, 2>, 2>, 2>({GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 0u})})}), GRT1e< GRT1e< GR1e<k, 2>, 2>, 2>({GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})}), GRT1e< GRT1e< GR1e<k, 2>, 2>, 2>({GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 2>, 4> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 2>, 3> = {GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GRT1e< GR1e<k, 2>, 2>, 3>, 3> reduction_polynomial<k, GRT1e< GRT1e< GR1e<k, 2>, 2>, 3>, 2> = {GRT1e< GRT1e< GR1e<k, 2>, 2>, 3>({GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 1u})})}), GRT1e< GRT1e< GR1e<k, 2>, 2>, 3>({GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 1u})})}), GRT1e< GRT1e< GR1e<k, 2>, 2>, 3>({GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 2>, 5> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 2>, 4> = {GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GRT1e< GR1e<k, 2>, 2>, 4>, 3> reduction_polynomial<k, GRT1e< GRT1e< GR1e<k, 2>, 2>, 4>, 2> = {GRT1e< GRT1e< GR1e<k, 2>, 2>, 4>({GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 0u})})}), GRT1e< GRT1e< GR1e<k, 2>, 2>, 4>({GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 1u})})}), GRT1e< GRT1e< GR1e<k, 2>, 2>, 4>({GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 2>, 6> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 2>, 5> = {GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 2>, 7> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 2>, 6> = {GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 2>, 8> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 2>, 7> = {GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 2>, 9> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 2>, 8> = {GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 2>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 2>, 4> reduction_polynomial<k, GR1e<k, 2>, 3> = {GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 3>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 3>, 2> = {GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GRT1e< GR1e<k, 2>, 3>, 2>, 3> reduction_polynomial<k, GRT1e< GRT1e< GR1e<k, 2>, 3>, 2>, 2> = {GRT1e< GRT1e< GR1e<k, 2>, 3>, 2>({GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 1u})})}), GRT1e< GRT1e< GR1e<k, 2>, 3>, 2>({GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 1u})})}), GRT1e< GRT1e< GR1e<k, 2>, 3>, 2>({GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 3>, 4> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 3>, 3> = {GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 3>, 5> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 3>, 4> = {GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 3>, 6> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 3>, 5> = {GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 3>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 2>, 5> reduction_polynomial<k, GR1e<k, 2>, 4> = {GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 4>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 4>, 2> = {GRT1e< GR1e<k, 2>, 4>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 4>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 4>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GRT1e< GR1e<k, 2>, 4>, 2>, 3> reduction_polynomial<k, GRT1e< GRT1e< GR1e<k, 2>, 4>, 2>, 2> = {GRT1e< GRT1e< GR1e<k, 2>, 4>, 2>({GRT1e< GR1e<k, 2>, 4>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 4>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 1u})})}), GRT1e< GRT1e< GR1e<k, 2>, 4>, 2>({GRT1e< GR1e<k, 2>, 4>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 4>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 1u})})}), GRT1e< GRT1e< GR1e<k, 2>, 4>, 2>({GRT1e< GR1e<k, 2>, 4>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 4>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 4>, 4> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 4>, 3> = {GRT1e< GR1e<k, 2>, 4>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 4>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 4>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 4>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 4>, 5> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 4>, 4> = {GRT1e< GR1e<k, 2>, 4>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 4>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 4>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 4>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 4>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 2>, 6> reduction_polynomial<k, GR1e<k, 2>, 5> = {GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 5>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 5>, 2> = {GRT1e< GR1e<k, 2>, 5>({GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 5>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 5>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 5>, 4> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 5>, 3> = {GRT1e< GR1e<k, 2>, 5>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 5>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 5>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})}), GRT1e< GR1e<k, 2>, 5>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 2>, 7> reduction_polynomial<k, GR1e<k, 2>, 6> = {GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 6>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 6>, 2> = {GRT1e< GR1e<k, 2>, 6>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 6>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 0u})}), GRT1e< GR1e<k, 2>, 6>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 2>, 8> reduction_polynomial<k, GR1e<k, 2>, 7> = {GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 7>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 7>, 2> = {GRT1e< GR1e<k, 2>, 7>({GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 7>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 7>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 2>, 9> reduction_polynomial<k, GR1e<k, 2>, 8> = {GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 2>, 8>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 2>, 8>, 2> = {GRT1e< GR1e<k, 2>, 8>({GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 1u})}), GRT1e< GR1e<k, 2>, 8>({GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 1u})}), GRT1e< GR1e<k, 2>, 8>({GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 2>, 10> reduction_polynomial<k, GR1e<k, 2>, 9> = {GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})};
    template <int k> inline const std::array<GR1e<k, 2>, 11> reduction_polynomial<k, GR1e<k, 2>, 10> = {GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})};
    template <int k> inline const std::array<GR1e<k, 2>, 12> reduction_polynomial<k, GR1e<k, 2>, 11> = {GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})};
    template <int k> inline const std::array<GR1e<k, 2>, 13> reduction_polynomial<k, GR1e<k, 2>, 12> = {GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})};
    template <int k> inline const std::array<GR1e<k, 2>, 14> reduction_polynomial<k, GR1e<k, 2>, 13> = {GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})};
    template <int k> inline const std::array<GR1e<k, 2>, 15> reduction_polynomial<k, GR1e<k, 2>, 14> = {GR1e<k, 2>({1u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})};
    template <int k> inline const std::array<GR1e<k, 2>, 16> reduction_polynomial<k, GR1e<k, 2>, 15> = {GR1e<k, 2>({1u, 0u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})};
    template <int k> inline const std::array<GR1e<k, 2>, 17> reduction_polynomial<k, GR1e<k, 2>, 16> = {GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 1u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({0u, 0u}), GR1e<k, 2>({1u, 0u})};
    template <int k> inline const std::array<Z2k<k>, 4> reduction_polynomial<k, Z2k<k>, 3> = {Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<GR1e<k, 3>, 3> reduction_polynomial<k, GR1e<k, 3>, 2> = {GR1e<k, 3>({0u, 1u, 0u}), GR1e<k, 3>({0u, 1u, 0u}), GR1e<k, 3>({1u, 0u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 3>, 2>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 3>, 2>, 2> = {GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({0u, 0u, 1u}), GR1e<k, 3>({0u, 0u, 1u})}), GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({1u, 0u, 1u}), GR1e<k, 3>({1u, 1u, 0u})}), GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({1u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GRT1e< GR1e<k, 3>, 2>, 2>, 3> reduction_polynomial<k, GRT1e< GRT1e< GR1e<k, 3>, 2>, 2>, 2> = {GRT1e< GRT1e< GR1e<k, 3>, 2>, 2>({GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 1u})}), GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({0u, 1u, 1u}), GR1e<k, 3>({1u, 1u, 0u})})}), GRT1e< GRT1e< GR1e<k, 3>, 2>, 2>({GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({0u, 0u, 1u}), GR1e<k, 3>({1u, 1u, 1u})}), GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({0u, 1u, 1u}), GR1e<k, 3>({1u, 1u, 1u})})}), GRT1e< GRT1e< GR1e<k, 3>, 2>, 2>({GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({1u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u})}), GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u})})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 3>, 2>, 4> reduction_polynomial<k, GRT1e< GR1e<k, 3>, 2>, 3> = {GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({1u, 0u, 0u}), GR1e<k, 3>({0u, 1u, 0u})}), GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 1u, 1u})}), GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u})}), GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({1u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 3>, 2>, 5> reduction_polynomial<k, GRT1e< GR1e<k, 3>, 2>, 4> = {GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({0u, 0u, 1u}), GR1e<k, 3>({1u, 0u, 0u})}), GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({1u, 0u, 0u}), GR1e<k, 3>({1u, 1u, 1u})}), GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({1u, 0u, 1u}), GR1e<k, 3>({1u, 1u, 1u})}), GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u})}), GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({1u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 3>, 2>, 6> reduction_polynomial<k, GRT1e< GR1e<k, 3>, 2>, 5> = {GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({1u, 0u, 1u})}), GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({1u, 0u, 1u}), GR1e<k, 3>({1u, 0u, 0u})}), GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({0u, 1u, 1u}), GR1e<k, 3>({1u, 0u, 0u})}), GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u})}), GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u})}), GRT1e< GR1e<k, 3>, 2>({GR1e<k, 3>({1u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 3>, 4> reduction_polynomial<k, GR1e<k, 3>, 3> = {GR1e<k, 3>({0u, 0u, 1u}), GR1e<k, 3>({0u, 1u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({1u, 0u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 3>, 3>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 3>, 3>, 2> = {GRT1e< GR1e<k, 3>, 3>({GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({1u, 1u, 0u})}), GRT1e< GR1e<k, 3>, 3>({GR1e<k, 3>({1u, 1u, 1u}), GR1e<k, 3>({1u, 0u, 0u}), GR1e<k, 3>({1u, 1u, 1u})}), GRT1e< GR1e<k, 3>, 3>({GR1e<k, 3>({1u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 3>, 3>, 4> reduction_polynomial<k, GRT1e< GR1e<k, 3>, 3>, 3> = {GRT1e< GR1e<k, 3>, 3>({GR1e<k, 3>({0u, 1u, 0u}), GR1e<k, 3>({1u, 1u, 0u}), GR1e<k, 3>({0u, 0u, 1u})}), GRT1e< GR1e<k, 3>, 3>({GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({1u, 0u, 0u}), GR1e<k, 3>({1u, 0u, 0u})}), GRT1e< GR1e<k, 3>, 3>({GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u})}), GRT1e< GR1e<k, 3>, 3>({GR1e<k, 3>({1u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 3>, 5> reduction_polynomial<k, GR1e<k, 3>, 4> = {GR1e<k, 3>({0u, 0u, 1u}), GR1e<k, 3>({0u, 1u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({1u, 0u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 3>, 4>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 3>, 4>, 2> = {GRT1e< GR1e<k, 3>, 4>({GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({1u, 1u, 1u}), GR1e<k, 3>({0u, 1u, 0u}), GR1e<k, 3>({1u, 0u, 0u})}), GRT1e< GR1e<k, 3>, 4>({GR1e<k, 3>({0u, 1u, 1u}), GR1e<k, 3>({0u, 1u, 1u}), GR1e<k, 3>({1u, 1u, 1u}), GR1e<k, 3>({1u, 1u, 1u})}), GRT1e< GR1e<k, 3>, 4>({GR1e<k, 3>({1u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 3>, 6> reduction_polynomial<k, GR1e<k, 3>, 5> = {GR1e<k, 3>({0u, 1u, 1u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 1u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({1u, 0u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 3>, 5>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 3>, 5>, 2> = {GRT1e< GR1e<k, 3>, 5>({GR1e<k, 3>({1u, 0u, 0u}), GR1e<k, 3>({1u, 1u, 1u}), GR1e<k, 3>({0u, 1u, 0u}), GR1e<k, 3>({0u, 1u, 0u}), GR1e<k, 3>({1u, 0u, 1u})}), GRT1e< GR1e<k, 3>, 5>({GR1e<k, 3>({1u, 1u, 0u}), GR1e<k, 3>({1u, 0u, 1u}), GR1e<k, 3>({1u, 1u, 0u}), GR1e<k, 3>({0u, 1u, 1u}), GR1e<k, 3>({1u, 1u, 0u})}), GRT1e< GR1e<k, 3>, 5>({GR1e<k, 3>({1u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 3>, 7> reduction_polynomial<k, GR1e<k, 3>, 6> = {GR1e<k, 3>({0u, 1u, 0u}), GR1e<k, 3>({0u, 1u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({1u, 0u, 0u})};
    template <int k> inline const std::array<GR1e<k, 3>, 8> reduction_polynomial<k, GR1e<k, 3>, 7> = {GR1e<k, 3>({0u, 1u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({1u, 0u, 0u})};
    template <int k> inline const std::array<GR1e<k, 3>, 9> reduction_polynomial<k, GR1e<k, 3>, 8> = {GR1e<k, 3>({1u, 0u, 1u}), GR1e<k, 3>({0u, 1u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 1u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({1u, 0u, 0u})};
    template <int k> inline const std::array<GR1e<k, 3>, 10> reduction_polynomial<k, GR1e<k, 3>, 9> = {GR1e<k, 3>({0u, 1u, 0u}), GR1e<k, 3>({0u, 1u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({1u, 0u, 0u})};
    template <int k> inline const std::array<GR1e<k, 3>, 11> reduction_polynomial<k, GR1e<k, 3>, 10> = {GR1e<k, 3>({1u, 0u, 1u}), GR1e<k, 3>({0u, 1u, 0u}), GR1e<k, 3>({0u, 1u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({0u, 0u, 0u}), GR1e<k, 3>({1u, 0u, 0u})};
    template <int k> inline const std::array<Z2k<k>, 5> reduction_polynomial<k, Z2k<k>, 4> = {Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<GR1e<k, 4>, 3> reduction_polynomial<k, GR1e<k, 4>, 2> = {GR1e<k, 4>({0u, 1u, 0u, 0u}), GR1e<k, 4>({0u, 1u, 0u, 0u}), GR1e<k, 4>({1u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 4>, 2>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 4>, 2>, 2> = {GRT1e< GR1e<k, 4>, 2>({GR1e<k, 4>({1u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 1u, 0u, 0u})}), GRT1e< GR1e<k, 4>, 2>({GR1e<k, 4>({1u, 0u, 0u, 1u}), GR1e<k, 4>({1u, 1u, 0u, 0u})}), GRT1e< GR1e<k, 4>, 2>({GR1e<k, 4>({1u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GRT1e< GR1e<k, 4>, 2>, 2>, 3> reduction_polynomial<k, GRT1e< GRT1e< GR1e<k, 4>, 2>, 2>, 2> = {GRT1e< GRT1e< GR1e<k, 4>, 2>, 2>({GRT1e< GR1e<k, 4>, 2>({GR1e<k, 4>({0u, 1u, 1u, 0u}), GR1e<k, 4>({0u, 1u, 0u, 0u})}), GRT1e< GR1e<k, 4>, 2>({GR1e<k, 4>({1u, 1u, 1u, 1u}), GR1e<k, 4>({1u, 0u, 0u, 0u})})}), GRT1e< GRT1e< GR1e<k, 4>, 2>, 2>({GRT1e< GR1e<k, 4>, 2>({GR1e<k, 4>({1u, 1u, 0u, 0u}), GR1e<k, 4>({1u, 0u, 0u, 0u})}), GRT1e< GR1e<k, 4>, 2>({GR1e<k, 4>({1u, 0u, 0u, 0u}), GR1e<k, 4>({1u, 0u, 1u, 1u})})}), GRT1e< GRT1e< GR1e<k, 4>, 2>, 2>({GRT1e< GR1e<k, 4>, 2>({GR1e<k, 4>({1u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u})}), GRT1e< GR1e<k, 4>, 2>({GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u})})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 4>, 2>, 4> reduction_polynomial<k, GRT1e< GR1e<k, 4>, 2>, 3> = {GRT1e< GR1e<k, 4>, 2>({GR1e<k, 4>({1u, 1u, 1u, 0u}), GR1e<k, 4>({0u, 1u, 0u, 1u})}), GRT1e< GR1e<k, 4>, 2>({GR1e<k, 4>({0u, 1u, 0u, 1u}), GR1e<k, 4>({0u, 1u, 0u, 0u})}), GRT1e< GR1e<k, 4>, 2>({GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u})}), GRT1e< GR1e<k, 4>, 2>({GR1e<k, 4>({1u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 4>, 2>, 5> reduction_polynomial<k, GRT1e< GR1e<k, 4>, 2>, 4> = {GRT1e< GR1e<k, 4>, 2>({GR1e<k, 4>({1u, 0u, 0u, 1u}), GR1e<k, 4>({0u, 1u, 0u, 0u})}), GRT1e< GR1e<k, 4>, 2>({GR1e<k, 4>({1u, 1u, 0u, 0u}), GR1e<k, 4>({1u, 1u, 0u, 0u})}), GRT1e< GR1e<k, 4>, 2>({GR1e<k, 4>({1u, 0u, 1u, 1u}), GR1e<k, 4>({0u, 0u, 1u, 1u})}), GRT1e< GR1e<k, 4>, 2>({GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u})}), GRT1e< GR1e<k, 4>, 2>({GR1e<k, 4>({1u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 4>, 4> reduction_polynomial<k, GR1e<k, 4>, 3> = {GR1e<k, 4>({0u, 1u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({1u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 4>, 3>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 4>, 3>, 2> = {GRT1e< GR1e<k, 4>, 3>({GR1e<k, 4>({0u, 1u, 0u, 1u}), GR1e<k, 4>({1u, 0u, 1u, 0u}), GR1e<k, 4>({1u, 1u, 1u, 1u})}), GRT1e< GR1e<k, 4>, 3>({GR1e<k, 4>({1u, 0u, 0u, 0u}), GR1e<k, 4>({1u, 1u, 0u, 0u}), GR1e<k, 4>({0u, 1u, 1u, 1u})}), GRT1e< GR1e<k, 4>, 3>({GR1e<k, 4>({1u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 4>, 5> reduction_polynomial<k, GR1e<k, 4>, 4> = {GR1e<k, 4>({0u, 0u, 0u, 1u}), GR1e<k, 4>({0u, 0u, 1u, 0u}), GR1e<k, 4>({0u, 1u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({1u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 4>, 4>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 4>, 4>, 2> = {GRT1e< GR1e<k, 4>, 4>({GR1e<k, 4>({1u, 1u, 0u, 1u}), GR1e<k, 4>({1u, 0u, 0u, 1u}), GR1e<k, 4>({0u, 1u, 0u, 1u}), GR1e<k, 4>({0u, 1u, 0u, 0u})}), GRT1e< GR1e<k, 4>, 4>({GR1e<k, 4>({1u, 1u, 0u, 1u}), GR1e<k, 4>({0u, 1u, 1u, 0u}), GR1e<k, 4>({1u, 1u, 1u, 1u}), GR1e<k, 4>({0u, 0u, 1u, 1u})}), GRT1e< GR1e<k, 4>, 4>({GR1e<k, 4>({1u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 4>, 6> reduction_polynomial<k, GR1e<k, 4>, 5> = {GR1e<k, 4>({0u, 1u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({1u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GR1e<k, 4>, 7> reduction_polynomial<k, GR1e<k, 4>, 6> = {GR1e<k, 4>({1u, 1u, 1u, 0u}), GR1e<k, 4>({0u, 1u, 0u, 0u}), GR1e<k, 4>({0u, 1u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({1u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GR1e<k, 4>, 8> reduction_polynomial<k, GR1e<k, 4>, 7> = {GR1e<k, 4>({0u, 1u, 0u, 0u}), GR1e<k, 4>({0u, 1u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({1u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GR1e<k, 4>, 9> reduction_polynomial<k, GR1e<k, 4>, 8> = {GR1e<k, 4>({0u, 1u, 1u, 0u}), GR1e<k, 4>({0u, 1u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 1u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({0u, 0u, 0u, 0u}), GR1e<k, 4>({1u, 0u, 0u, 0u})};
    template <int k> inline const std::array<Z2k<k>, 6> reduction_polynomial<k, Z2k<k>, 5> = {Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<GR1e<k, 5>, 3> reduction_polynomial<k, GR1e<k, 5>, 2> = {GR1e<k, 5>({0u, 0u, 1u, 0u, 0u}), GR1e<k, 5>({0u, 1u, 0u, 0u, 0u}), GR1e<k, 5>({1u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 5>, 2>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 5>, 2>, 2> = {GRT1e< GR1e<k, 5>, 2>({GR1e<k, 5>({1u, 0u, 0u, 1u, 0u}), GR1e<k, 5>({0u, 1u, 1u, 1u, 1u})}), GRT1e< GR1e<k, 5>, 2>({GR1e<k, 5>({0u, 0u, 0u, 1u, 0u}), GR1e<k, 5>({0u, 0u, 1u, 1u, 0u})}), GRT1e< GR1e<k, 5>, 2>({GR1e<k, 5>({1u, 0u, 0u, 0u, 0u}), GR1e<k, 5>({0u, 0u, 0u, 0u, 0u})})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 5>, 2>, 4> reduction_polynomial<k, GRT1e< GR1e<k, 5>, 2>, 3> = {GRT1e< GR1e<k, 5>, 2>({GR1e<k, 5>({1u, 0u, 1u, 1u, 0u}), GR1e<k, 5>({0u, 0u, 1u, 0u, 1u})}), GRT1e< GR1e<k, 5>, 2>({GR1e<k, 5>({1u, 0u, 1u, 0u, 0u}), GR1e<k, 5>({1u, 0u, 1u, 1u, 1u})}), GRT1e< GR1e<k, 5>, 2>({GR1e<k, 5>({0u, 0u, 0u, 0u, 0u}), GR1e<k, 5>({0u, 0u, 0u, 0u, 0u})}), GRT1e< GR1e<k, 5>, 2>({GR1e<k, 5>({1u, 0u, 0u, 0u, 0u}), GR1e<k, 5>({0u, 0u, 0u, 0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 5>, 4> reduction_polynomial<k, GR1e<k, 5>, 3> = {GR1e<k, 5>({1u, 0u, 1u, 0u, 0u}), GR1e<k, 5>({0u, 1u, 0u, 0u, 0u}), GR1e<k, 5>({0u, 0u, 0u, 0u, 0u}), GR1e<k, 5>({1u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 5>, 3>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 5>, 3>, 2> = {GRT1e< GR1e<k, 5>, 3>({GR1e<k, 5>({0u, 1u, 1u, 0u, 1u}), GR1e<k, 5>({1u, 0u, 0u, 1u, 0u}), GR1e<k, 5>({0u, 1u, 1u, 1u, 0u})}), GRT1e< GR1e<k, 5>, 3>({GR1e<k, 5>({1u, 0u, 0u, 0u, 0u}), GR1e<k, 5>({0u, 1u, 0u, 1u, 0u}), GR1e<k, 5>({1u, 1u, 1u, 0u, 1u})}), GRT1e< GR1e<k, 5>, 3>({GR1e<k, 5>({1u, 0u, 0u, 0u, 0u}), GR1e<k, 5>({0u, 0u, 0u, 0u, 0u}), GR1e<k, 5>({0u, 0u, 0u, 0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 5>, 5> reduction_polynomial<k, GR1e<k, 5>, 4> = {GR1e<k, 5>({0u, 1u, 0u, 0u, 0u}), GR1e<k, 5>({0u, 1u, 0u, 0u, 0u}), GR1e<k, 5>({0u, 0u, 0u, 0u, 0u}), GR1e<k, 5>({0u, 0u, 0u, 0u, 0u}), GR1e<k, 5>({1u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GR1e<k, 5>, 6> reduction_polynomial<k, GR1e<k, 5>, 5> = {GR1e<k, 5>({0u, 1u, 0u, 1u, 0u}), GR1e<k, 5>({0u, 0u, 0u, 0u, 0u}), GR1e<k, 5>({0u, 1u, 0u, 0u, 0u}), GR1e<k, 5>({0u, 0u, 0u, 0u, 0u}), GR1e<k, 5>({0u, 0u, 0u, 0u, 0u}), GR1e<k, 5>({1u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GR1e<k, 5>, 7> reduction_polynomial<k, GR1e<k, 5>, 6> = {GR1e<k, 5>({0u, 0u, 1u, 0u, 0u}), GR1e<k, 5>({0u, 1u, 0u, 0u, 0u}), GR1e<k, 5>({0u, 0u, 0u, 0u, 0u}), GR1e<k, 5>({0u, 0u, 0u, 0u, 0u}), GR1e<k, 5>({0u, 0u, 0u, 0u, 0u}), GR1e<k, 5>({0u, 0u, 0u, 0u, 0u}), GR1e<k, 5>({1u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<Z2k<k>, 7> reduction_polynomial<k, Z2k<k>, 6> = {Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<GR1e<k, 6>, 3> reduction_polynomial<k, GR1e<k, 6>, 2> = {GR1e<k, 6>({0u, 1u, 0u, 0u, 0u, 0u}), GR1e<k, 6>({0u, 1u, 0u, 0u, 0u, 0u}), GR1e<k, 6>({1u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 6>, 2>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 6>, 2>, 2> = {GRT1e< GR1e<k, 6>, 2>({GR1e<k, 6>({0u, 0u, 1u, 0u, 0u, 1u}), GR1e<k, 6>({1u, 1u, 0u, 0u, 0u, 0u})}), GRT1e< GR1e<k, 6>, 2>({GR1e<k, 6>({0u, 0u, 1u, 0u, 1u, 1u}), GR1e<k, 6>({1u, 1u, 0u, 1u, 0u, 1u})}), GRT1e< GR1e<k, 6>, 2>({GR1e<k, 6>({1u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 6>({0u, 0u, 0u, 0u, 0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 6>, 4> reduction_polynomial<k, GR1e<k, 6>, 3> = {GR1e<k, 6>({0u, 1u, 0u, 0u, 0u, 0u}), GR1e<k, 6>({0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 6>({0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 6>({1u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GR1e<k, 6>, 5> reduction_polynomial<k, GR1e<k, 6>, 4> = {GR1e<k, 6>({0u, 1u, 0u, 0u, 0u, 0u}), GR1e<k, 6>({0u, 0u, 1u, 0u, 0u, 0u}), GR1e<k, 6>({0u, 1u, 0u, 0u, 0u, 0u}), GR1e<k, 6>({0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 6>({1u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GR1e<k, 6>, 6> reduction_polynomial<k, GR1e<k, 6>, 5> = {GR1e<k, 6>({0u, 1u, 0u, 0u, 0u, 0u}), GR1e<k, 6>({0u, 1u, 0u, 0u, 0u, 0u}), GR1e<k, 6>({0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 6>({0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 6>({0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 6>({1u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<Z2k<k>, 8> reduction_polynomial<k, Z2k<k>, 7> = {Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<GR1e<k, 7>, 3> reduction_polynomial<k, GR1e<k, 7>, 2> = {GR1e<k, 7>({0u, 1u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 7>({0u, 1u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 7>({1u, 0u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 7>, 2>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 7>, 2>, 2> = {GRT1e< GR1e<k, 7>, 2>({GR1e<k, 7>({0u, 1u, 1u, 1u, 1u, 0u, 0u}), GR1e<k, 7>({0u, 1u, 0u, 0u, 1u, 1u, 1u})}), GRT1e< GR1e<k, 7>, 2>({GR1e<k, 7>({1u, 0u, 1u, 0u, 0u, 0u, 0u}), GR1e<k, 7>({1u, 0u, 1u, 0u, 1u, 0u, 0u})}), GRT1e< GR1e<k, 7>, 2>({GR1e<k, 7>({1u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 7>({0u, 0u, 0u, 0u, 0u, 0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 7>, 4> reduction_polynomial<k, GR1e<k, 7>, 3> = {GR1e<k, 7>({0u, 0u, 0u, 1u, 0u, 0u, 0u}), GR1e<k, 7>({0u, 1u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 7>({0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 7>({1u, 0u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GR1e<k, 7>, 5> reduction_polynomial<k, GR1e<k, 7>, 4> = {GR1e<k, 7>({0u, 1u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 7>({0u, 1u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 7>({0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 7>({0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 7>({1u, 0u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<Z2k<k>, 9> reduction_polynomial<k, Z2k<k>, 8> = {Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<GR1e<k, 8>, 3> reduction_polynomial<k, GR1e<k, 8>, 2> = {GR1e<k, 8>({1u, 1u, 1u, 1u, 1u, 1u, 1u, 1u}), GR1e<k, 8>({1u, 1u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 8>({1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GRT1e< GR1e<k, 8>, 2>, 3> reduction_polynomial<k, GRT1e< GR1e<k, 8>, 2>, 2> = {GRT1e< GR1e<k, 8>, 2>({GR1e<k, 8>({0u, 0u, 1u, 1u, 0u, 1u, 0u, 0u}), GR1e<k, 8>({0u, 0u, 1u, 1u, 0u, 1u, 0u, 0u})}), GRT1e< GR1e<k, 8>, 2>({GR1e<k, 8>({1u, 0u, 1u, 1u, 0u, 0u, 0u, 0u}), GR1e<k, 8>({1u, 0u, 0u, 1u, 0u, 0u, 0u, 1u})}), GRT1e< GR1e<k, 8>, 2>({GR1e<k, 8>({1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 8>({0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u})})};
    template <int k> inline const std::array<GR1e<k, 8>, 4> reduction_polynomial<k, GR1e<k, 8>, 3> = {GR1e<k, 8>({1u, 1u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 8>({0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 8>({0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 8>({1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GR1e<k, 8>, 5> reduction_polynomial<k, GR1e<k, 8>, 4> = {GR1e<k, 8>({1u, 1u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 8>({1u, 1u, 1u, 1u, 0u, 0u, 0u, 0u}), GR1e<k, 8>({1u, 1u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 8>({0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 8>({1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<Z2k<k>, 10> reduction_polynomial<k, Z2k<k>, 9> = {Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<GR1e<k, 9>, 3> reduction_polynomial<k, GR1e<k, 9>, 2> = {GR1e<k, 9>({1u, 0u, 0u, 1u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 9>({1u, 0u, 0u, 1u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 9>({1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GR1e<k, 9>, 4> reduction_polynomial<k, GR1e<k, 9>, 3> = {GR1e<k, 9>({1u, 0u, 0u, 1u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 9>({1u, 0u, 0u, 1u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 9>({0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 9>({1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<Z2k<k>, 11> reduction_polynomial<k, Z2k<k>, 10> = {Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<GR1e<k, 10>, 3> reduction_polynomial<k, GR1e<k, 10>, 2> = {GR1e<k, 10>({0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 1u}), GR1e<k, 10>({0u, 1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 10>({1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<GR1e<k, 10>, 4> reduction_polynomial<k, GR1e<k, 10>, 3> = {GR1e<k, 10>({0u, 1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 10>({0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 10>({0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 10>({1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<Z2k<k>, 12> reduction_polynomial<k, Z2k<k>, 11> = {Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<GR1e<k, 11>, 3> reduction_polynomial<k, GR1e<k, 11>, 2> = {GR1e<k, 11>({0u, 0u, 1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 11>({0u, 1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 11>({1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<Z2k<k>, 13> reduction_polynomial<k, Z2k<k>, 12> = {Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<GR1e<k, 12>, 3> reduction_polynomial<k, GR1e<k, 12>, 2> = {GR1e<k, 12>({1u, 1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 12>({1u, 1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 12>({1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<Z2k<k>, 14> reduction_polynomial<k, Z2k<k>, 13> = {Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<GR1e<k, 13>, 3> reduction_polynomial<k, GR1e<k, 13>, 2> = {GR1e<k, 13>({0u, 1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 13>({0u, 1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 13>({1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<Z2k<k>, 15> reduction_polynomial<k, Z2k<k>, 14> = {Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<GR1e<k, 14>, 3> reduction_polynomial<k, GR1e<k, 14>, 2> = {GR1e<k, 14>({1u, 1u, 0u, 1u, 0u, 0u, 1u, 0u, 0u, 0u, 0u, 0u, 1u, 0u}), GR1e<k, 14>({1u, 0u, 0u, 1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 14>({1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<Z2k<k>, 16> reduction_polynomial<k, Z2k<k>, 15> = {Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<GR1e<k, 15>, 3> reduction_polynomial<k, GR1e<k, 15>, 2> = {GR1e<k, 15>({0u, 1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 15>({0u, 1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 15>({1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<Z2k<k>, 17> reduction_polynomial<k, Z2k<k>, 16> = {Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<GR1e<k, 16>, 3> reduction_polynomial<k, GR1e<k, 16>, 2> = {GR1e<k, 16>({0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 1u, 0u, 0u, 0u, 0u}), GR1e<k, 16>({1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u}), GR1e<k, 16>({1u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u})};
    template <int k> inline const std::array<Z2k<k>, 18> reduction_polynomial<k, Z2k<k>, 17> = {Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<Z2k<k>, 19> reduction_polynomial<k, Z2k<k>, 18> = {Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<Z2k<k>, 20> reduction_polynomial<k, Z2k<k>, 19> = {Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<Z2k<k>, 21> reduction_polynomial<k, Z2k<k>, 20> = {Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<Z2k<k>, 22> reduction_polynomial<k, Z2k<k>, 21> = {Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<Z2k<k>, 23> reduction_polynomial<k, Z2k<k>, 22> = {Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<Z2k<k>, 24> reduction_polynomial<k, Z2k<k>, 23> = {Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<Z2k<k>, 25> reduction_polynomial<k, Z2k<k>, 24> = {Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<Z2k<k>, 26> reduction_polynomial<k, Z2k<k>, 25> = {Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<Z2k<k>, 27> reduction_polynomial<k, Z2k<k>, 26> = {Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<Z2k<k>, 28> reduction_polynomial<k, Z2k<k>, 27> = {Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<Z2k<k>, 29> reduction_polynomial<k, Z2k<k>, 28> = {Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<Z2k<k>, 30> reduction_polynomial<k, Z2k<k>, 29> = {Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<Z2k<k>, 31> reduction_polynomial<k, Z2k<k>, 30> = {Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<Z2k<k>, 32> reduction_polynomial<k, Z2k<k>, 31> = {Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
    template <int k> inline const std::array<Z2k<k>, 33> reduction_polynomial<k, Z2k<k>, 32> = {Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(0u), Z2k<k>(1u)};
} // namespace grmodtables
